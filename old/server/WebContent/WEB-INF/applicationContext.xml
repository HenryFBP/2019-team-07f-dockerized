<?xml version="1.0" encoding="UTF-8"?>

<!--
Thanks to https://www.journaldev.com/7122/jsf-spring-hibernate-integration-example-tutorial#jsf-spring-hibernate-project-setup,
my project doesn't suck!
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing
        infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving
        up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>


    <!-- Allows us to use ${key} to get values from properties files. -->
    <context:property-placeholder location="META-INF/database.properties"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://${host}/${database}?serverTimezone=UTC&amp;characterEncoding=utf-8"/>
        <property name="username" value="${user}"/>
        <property name="password" value="${password}"/>
    </bean>

    <!-- Hibernate 4 SessionFactory Bean definition -->
    <bean id="hibernate5AnnotatedSessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <value>com.teamteem.model.Person</value>
                <value>com.teamteem.model.Video</value>
                <value>com.teamteem.model.Audio</value>
                <value>com.teamteem.model.Text</value>
                <value>com.teamteem.model.Details</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL57Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">
                    update <!-- FIXME No actual thing to fix. This prop is dangerous. Certain values can autodrop all tables. -->
                </prop>
                <prop key="hibernate.connection.autocommit">true</prop>
            </props>
        </property>
    </bean>

    <bean id="personDAO"
          class="com.teamteem.dao.PersonDAO">
        <property name="sessionFactory"
                  ref="hibernate5AnnotatedSessionFactory"/>
    </bean>

    <bean id="uploadBean" class="UploadBean"/>

    <bean id="sessionHelper" class="com.teamteem.util.SessionHelper"/>

    <bean id="personService"
          class="com.teamteem.service.PersonService">
        <property name="personDAO" ref="personDAO"/>
    </bean>

    <bean id="login"
          class="com.teamteem.dao.Login">
        <property name="personDAO" ref="personDAO"/>
    </bean>

    <bean id="testUserStartupServletListener"
          class="com.teamteem.startup.TestUserStartupServletListener">
        <property name="personDAO" ref="personDAO"/>
    </bean>

    <context:component-scan base-package="com.teamteem"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>


    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory"
                  ref="hibernate5AnnotatedSessionFactory"/>
    </bean>

</beans>
